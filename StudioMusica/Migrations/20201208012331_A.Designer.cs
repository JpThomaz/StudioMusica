// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudioMusica.Data;

namespace StudioMusica.Migrations
{
    [DbContext(typeof(StudioContext))]
    [Migration("20201208012331_A")]
    partial class A
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("StudioMusica.Models.Album", b =>
                {
                    b.Property<long?>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataAlbum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Formato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MusicoID")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlbumID");

                    b.HasIndex("MusicoID");

                    b.ToTable("Albuns");
                });

            modelBuilder.Entity("StudioMusica.Models.Faixa", b =>
                {
                    b.Property<long?>("FaixaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AlbunsAlbumID")
                        .HasColumnType("bigint");

                    b.Property<string>("Autor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Volume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaixaID");

                    b.HasIndex("AlbunsAlbumID");

                    b.ToTable("Faixas");
                });

            modelBuilder.Entity("StudioMusica.Models.Instrumento", b =>
                {
                    b.Property<long?>("InstrumentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MusicosMusicoID")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstrumentoID");

                    b.HasIndex("MusicosMusicoID");

                    b.ToTable("Instrumentos");
                });

            modelBuilder.Entity("StudioMusica.Models.Musico", b =>
                {
                    b.Property<long?>("MusicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereço")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FaixasFaixaID")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusicoID");

                    b.HasIndex("FaixasFaixaID");

                    b.ToTable("Musicos");
                });

            modelBuilder.Entity("StudioMusica.Models.Album", b =>
                {
                    b.HasOne("StudioMusica.Models.Musico", null)
                        .WithMany("Albuns")
                        .HasForeignKey("MusicoID");
                });

            modelBuilder.Entity("StudioMusica.Models.Faixa", b =>
                {
                    b.HasOne("StudioMusica.Models.Album", "Albuns")
                        .WithMany("Faixas")
                        .HasForeignKey("AlbunsAlbumID");

                    b.Navigation("Albuns");
                });

            modelBuilder.Entity("StudioMusica.Models.Instrumento", b =>
                {
                    b.HasOne("StudioMusica.Models.Musico", "Musicos")
                        .WithMany()
                        .HasForeignKey("MusicosMusicoID");

                    b.Navigation("Musicos");
                });

            modelBuilder.Entity("StudioMusica.Models.Musico", b =>
                {
                    b.HasOne("StudioMusica.Models.Faixa", "Faixas")
                        .WithMany()
                        .HasForeignKey("FaixasFaixaID");

                    b.Navigation("Faixas");
                });

            modelBuilder.Entity("StudioMusica.Models.Album", b =>
                {
                    b.Navigation("Faixas");
                });

            modelBuilder.Entity("StudioMusica.Models.Musico", b =>
                {
                    b.Navigation("Albuns");
                });
#pragma warning restore 612, 618
        }
    }
}
